<snippet>
	<content><![CDATA[

// maxN can be upto 1e7
vector<int> spf(maxN);
vector<int> primes;
void spfsieve() {
    primes.push_back(2);
    for (int i = 2; i < maxN; i += 2)
        spf[i] = 2;
    for (int i = 3; i < maxN; i += 2) {
        if (spf[i] == 0) {
            spf[i] = i;
            primes.push_back(i);
            for (int j = 2 * i; j < maxN; j += i) {
                if (spf[j] == 0) spf[j] = i;
            }
        }
    }
}

// int normalize(int n) {
vector<pair<int, int>> factorize(int n) {
    vector<pair<int, int>> fac;
    int norm = 1;
    while (n > 1) {
        int c = 0, sp = spf[n];
        while (n % sp == 0) {
            n /= sp;
            c++;
        }
        fac.push_back({sp, c});
        if (c & 1) 
            norm *= sp;
    }
    return fac;
    // return norm;
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>spfsieve_fnc</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.cpp, source.c++, source.c</scope>
</snippet>
